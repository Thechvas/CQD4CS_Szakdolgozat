generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(cuid())
  username   String   @unique
  email      String   @unique
  password   String
  profilePic String?
  country    String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  reviews  Review[]
  lists    List[]
  comments Comment[]
  likes    Like[]

  followers Follows[] @relation("following")
  following Follows[] @relation("follower")
}

model Review {
  id        String   @id @default(cuid())
  text      String
  rating    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  gameId    Int

  likes Like[]

  @@unique([userId, gameId])
}

model List {
  id          String   @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime @default(now())

  userId String
  user   User   @relation(fields: [userId], references: [id])

  gameIds Int[]

  comments Comment[]
}

model Follows {
  followerId  String
  followingId String
  createdAt   DateTime @default(now())

  follower  User @relation("follower", fields: [followerId], references: [id], onDelete: Cascade)
  following User @relation("following", fields: [followingId], references: [id], onDelete: Cascade)

  @@id([followerId, followingId])
  @@index([followerId, followingId])
}

model Comment {
  id        String   @id @default(cuid())
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  listId String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  list List @relation(fields: [listId], references: [id], onDelete: Cascade)
}

model Like {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  userId   String
  reviewId String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  review Review @relation(fields: [reviewId], references: [id], onDelete: Cascade)

  @@unique([userId, reviewId])
}
